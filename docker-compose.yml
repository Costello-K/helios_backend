version: '3.8'

services:
  db:
    container_name: ${POSTGRES_HOST}
    image: postgres:15.1
    env_file:
      - .env
    environment:
      POSTGRES_DB: ${POSTGRES_NAME}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    ports:
      - '5432:5432'
    volumes:
      - pgsql_data:/var/lib/postgresql/data/
    networks:
      - helios_network

  redis:
    container_name: ${REDIS_HOST}
    image: redis:latest
    restart: always
    env_file:
      - .env
    command: redis-server --requirepass ${REDIS_PASSWORD}
    ports:
      - '6379:6379'
    volumes:
      - redis-data:/var/lib/redis/data/
    networks:
      - helios_network

  backend_wsgi:
    container_name: helios_backend_wsgi
    build: .
    env_file:
      - .env
    command: /home/ubuntu/backend/start.sh
    volumes:
      - static_volume:/home/ubuntu/backend/static
      - media_volume:/home/ubuntu/backend/media
    ports:
      - '8000:8000'
    depends_on:
      - db
      - redis
    networks:
      - helios_network

  backend_asgi:
    container_name: helios_backend_asgi
    build: .
    env_file:
      - .env
    command: daphne -b 0.0.0.0 -p 8001 helios_backend.asgi:application
    volumes:
      - static_volume:/home/ubuntu/backend/static
      - media_volume:/home/ubuntu/backend/media
    ports:
      - '8001:8001'
    depends_on:
      - db
      - redis
      - backend_wsgi
    networks:
      - helios_network

  celery:
    build: .
    restart: always
    env_file:
      - .env
    command: celery -A helios_backend worker -l info
    depends_on:
      - db
      - redis
      - backend_wsgi
    volumes:
      - celery_data:/home/ubuntu/backend/
    networks:
      - helios_network

  flower:
    container_name: flower
    image: mher/flower
    env_file:
      - .env
    environment:
      - CELERY_BROKER_URL=redis://default:${REDIS_PASSWORD}@${REDIS_HOST}:${REDIS_PORT}/${REDIS_DB}
    command: celery flower --persistent=True --basic_auth=${FLOWER_USER}:${FLOWER_PASSWORD}
    ports:
      - '5555:5555'
    depends_on:
      - db
      - redis
      - backend_wsgi
      - celery
    volumes:
      - flower_data:/home/ubuntu/backend/
    networks:
      - helios_network

  nginx:
    container_name: nginx
    restart: always
    build:
      context: ./nginx
      dockerfile: Dockerfile
    volumes:
      - static_volume:/home/ubuntu/backend/static
      - media_volume:/home/ubuntu/backend/media
    ports:
      - '8070:8070'
    depends_on:
      - backend_wsgi
      - backend_asgi
    networks:
      - helios_network

volumes:
  pgsql_data:
  redis-data:
  static_volume:
  media_volume:
  celery_data:
  flower_data:

networks:
  helios_network:
    name: helios_network
    driver: bridge
